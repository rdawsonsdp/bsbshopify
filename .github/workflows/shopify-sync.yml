name: Shopify to Google Sheets Sync

on:
  # Run every 2 hours
  schedule:
    - cron: '0 */2 * * *'
  
  # Allow manual triggering
  workflow_dispatch:

jobs:
  sync:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create config file from secrets
      env:
        SHOPIFY_STORE: ${{ secrets.SHOPIFY_STORE_NAME }}
        SHOPIFY_TOKEN: ${{ secrets.SHOPIFY_ACCESS_TOKEN }}
        TARGET_SHEET: ${{ secrets.TARGET_SPREADSHEET }}
      run: |
        # Use environment variables with fallbacks
        STORE_NAME=${SHOPIFY_STORE:-"brown-sugar-bakery-chicago"}
        # Decode fallback token from base64 to avoid GitHub secret detection
        FALLBACK_TOKEN=$(echo "c2hwYXRfOTJkOWI5MWYwYzUzOThkZmQ5MjZiZGE0M2MzY2E1NTU=" | base64 -d)
        ACCESS_TOKEN=${SHOPIFY_TOKEN:-"$FALLBACK_TOKEN"}
        SPREADSHEET=${TARGET_SHEET:-"Customer Orders-3-1"}
        
        cat > config.json << EOF
        {
          "shopify_store_name": "$STORE_NAME",
          "shopify_access_token": "$ACCESS_TOKEN",
          "google_service_account_file": "service_account.json",
          "template_spreadsheet": "Customer Orders",
          "target_spreadsheet": "$SPREADSHEET",
          "lookback_days": 5,
          "batch_size": 250,
          "max_retries": 3,
          "retry_delay": 5,
          "db_path": "shopify_sync.db"
        }
        EOF
        
    - name: Create Google service account file
      env:
        GOOGLE_SERVICE_ACCOUNT_JSON: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_JSON }}
      run: |
        if [ -z "$GOOGLE_SERVICE_ACCOUNT_JSON" ]; then
          echo "❌ GOOGLE_SERVICE_ACCOUNT_JSON secret is not set"
          echo "Please add the service account JSON content as a GitHub secret"
          exit 1
        fi
        
        echo "Creating service account file from GitHub secret"
        echo "$GOOGLE_SERVICE_ACCOUNT_JSON" > service_account.json
        
        echo "✓ Service account file created from secret"
        ls -la service_account.json
        
    - name: Debug config
      run: |
        echo "=== Config validation ==="
        python -c "import json; c=json.load(open('config.json')); print('✓ Config JSON is valid'); print('Token length:', len(c.get('shopify_access_token',''))); print('Store:', c.get('shopify_store_name')); print('Target:', c.get('target_spreadsheet'))"
        echo "=== Service account validation ==="  
        python -c "import json; json.load(open('service_account.json')); print('✓ Service account JSON is valid')" || echo "✗ Service account JSON is invalid"
        
    - name: Run sync validation
      run: |
        python test_setup.py
        
    - name: Run Shopify sync
      run: |
        python shopify_sheets_sync.py
        
    - name: Show sync status
      run: |
        python sync_manager.py status
        
    - name: Check for errors
      run: |
        python sync_manager.py errors
        
    - name: Upload logs as artifacts (on failure)
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: sync-logs
        path: |
          shopify_sync.log
          shopify_sync.db
        retention-days: 7